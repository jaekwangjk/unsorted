
#Input Script Consists of following 4 steps. 
#Initialization
#Atom/particle definition and insertion
#Settings
#Run a simulation


# to run the script you have to define the variables via '-var' option
#  - blockiness1
#  - blockiness2
#  - angle


# (JK Question) what are blockiness and angle here?

variable blockiness1 equal 20 # length
variable blockiness2 equal 2  # width
variable angle equal 90

echo both

atom_style superquadric

# atom_modify choice of either "array -(fast)" or "hash - (memory efficient) "
atom_modify	map array

# Set the style of boundaries for the GLOBAL simulation box in each dimension.
# 'f' is non-periodic, the position of the face is fixed.
boundary	f f f

# (JK Question) Newton 3rd Law is off?
# it is turning of Newton 3rd law, both pair and bond 
# newton flag to off means that if two interacting atoms are on different processors, 
# both processors compute their interaction and the resulting force information is not communicated.

newton		off

# 
# sets the style of inter-processor communication that occurs each timestep 
# 라이츠 매뉴얼에 따르면, for granular systems optimization is automatically performed with the single style, 
# so multi is not necessary/available for granular systems. 
# The vel option enables velocity information to be communicated with ghost particles.

# For style si, these are the units:
#mass = kilograms
#distance = meters
#time = seconds
#energy = Joules
#velocity = meters/second
#force = Newtons
#torque = Newton-meters
#temperature = Kelvin
#pressure = Pascals
#dynamic viscosity = Pascal*second
#charge = Coulombs
#dipole = Coulombs*meters
#electric field = volts/meter
#density = kilograms/meter^dim

communicate	single vel yes
units		si

# (JK Question) Here, how to undrestand these parameters? 
region		reg block -1 10 -1 5 -0.1 0.1 units box
create_box	3 reg


# neighbor *cutoff distance* *what style will you use for building neighbors?
# The *bin* style creates the list by binning which is an operation that scales linearly with N/P 
# *bin* is usually fastest 
neighbor	0.001 bin

# Here, it sets how often neighbor lists are built as a simulation runs
# The delay setting means never build a new list until at least N steps after the previous build.
# (JK Question) what if N=0, then? Does it build every time? 
neigh_modify	delay 0

variable dt equal 5e-5
variable nStepsRun    equal 2.0/${dt}
variable writeOutEvery equal 0.005/${dt}
# (JK Question) not sure thermofreq
variable thermofreq   equal 0.01/${dt}
variable mStepRun     equal 0.1/${dt}

# Material properties 
# Coefficient of Restitution 
# (JK Question) AM, box, Side
# 뒤에 fix에서 자기들끼리 어떻게 정의가 되고 있는지.. 

variable CoR_AM  equal 0.46
variable CoR_box  equal 0.46
variable CoR_side equal 0.051 # 이거 낮추니까 안정적임

variable CoF_AM  equal 0.4 # tan(21.9) = 0.4
variable CoF_box  equal 2.74 # tan(70)
variable CoF_side equal 1e-5

variable CoR_12 equal (v_CoR_AM*v_CoR_box)^(1/2)
variable CoR_13 equal 0.051 # AM & side
variable CoR_23 equal (v_CoR_side*v_CoR_box)^(1/2)

variable CoF_12 equal (v_CoF_AM*v_CoF_box)^(1/2)
variable CoF_13 equal 1e-5 # AM & side
variable CoF_23 equal (v_CoF_side*v_CoF_box)^(1/2)

# Young's Modulus 
variable E_AM equal 5.84e+6

# a “fix” is any operation that is applied to the system during timestepping or minimization
# (2024.01.19) Let us continue on the fix 

# Material properties required for new pair styles
# 명령어 이해 --

# fix ID group-ID style args
# ID = user-assigned name for the fix
# group-ID = ID of the group of atoms to apply the fix to
# style = one of a long list of possible style names (see below)
# args = arguments used by a particular style

# (JK_QUESTION): 저기 매트릭스로 만든 부분 이해가 안감. 

fix         m1 all property/global youngsModulus peratomtype ${E_AM} 10e8 10e8
fix         m2 all property/global poissonsRatio peratomtype 0.3 0.3 0.3
fix         m3 all property/global coefficientRestitution peratomtypepair 3 ${CoR_AM} ${CoR_12} ${CoR_13} &
                                                                            ${CoR_12} ${CoR_box} ${CoR_23} &
									    ${CoR_13} ${CoR_23} ${CoR_side}

fix         m4 all property/global coefficientFriction peratomtypepair 3 ${CoF_AM} ${CoF_12} ${CoF_13} &
                                                                         ${CoF_12} ${CoF_box} ${CoF_23} &
								         ${CoF_13} ${CoF_23} ${CoF_side}



# The gran pair styles imposes a force between two neighboring particles
#pair_style gran model hertz tangential history rolling_friction epsd2 surface superquadric #Hertzian without cohesion
# Here, the code is defining the model for particle interaction  

#  It applies is the surface model for smooth convex superquadric particles.

pair_style gran model hertz tangential history surface superquadric gaussianCurvature yes limitForce on

# "pair_coeff" should be used if all atoms in the simulation interact via a granular potential

pair_coeff	* *
timestep ${dt}

variable totaltime equal step*${dt}

fix xwalls1 all wall/gran model hertz tangential history surface superquadric primitive type 3 xplane 0.0
fix xwalls2 all wall/gran model hertz tangential history surface superquadric primitive type 3 xplane 10.0
fix ywalls1 all wall/gran model hertz tangential history surface superquadric primitive type 2 yplane 0.0
fix ywalls2 all wall/gran model hertz tangential history surface superquadric primitive type 2 yplane 5.0

fix verticalWall all wall/gran model hertz tangential history surface superquadric primitive type 3 xplane 0.2
fix moveWall all mesh/surface file movewall.stl type 3
fix fixWall all mesh/surface file fixwall.stl type 3 move 0. 0. 0.039875
fix wall all wall/gran model hertz tangential history surface superquadric mesh n_meshes 2 meshes fixWall moveWall

variable radii equal 0.00075 # 1.5 mm
variable radii10 equal 0.015 # 50 mm

##### (JK_QUESTION): what does the following command do? 
region bc1 block 0 0.202 0.0 0.25 0.0 0.03008 units box


# what are numbers? it seems they are seed 15485867 and 32452843 ...
fix		pts1 all particletemplate/superquadric 15485867 atom_type 1 density constant 2079.5 shape constant ${radii} ${radii} ${radii10} blockiness constant ${blockiness1} ${blockiness2}

# seed - ntemplate -  ID of a fix of type particletemplate/sphere  and its weight 
# 'pdd1' will be related to fix 'ins' 
fix		pdd1 all particledistribution/discrete 32452843 1 pts1 1.0


# (JK_QUESTION): Should go over this command step-by-step 

fix 	ins all insert/pack seed 86028157 distributiontemplate pdd1 &
			orientation template & 
			vel constant 0 0 0 &
			insert_every once overlapcheck yes all_in yes particles_in_region 9600 region bc1
			
#apply nve integration to all particles that are inserted as single particles
# nve integration is a plain time integration to update position and velocity for atoms in the group each timestep.

fix		integr all nve/superquadric integration_scheme 1

variable time equal step*${dt}

#output settings, include total thermal energy

# 'compute' : Define a computation that will be performed on a group of atoms.
# compute ID-GroupID ---- erotate : rotational kinetic energy of all particles.
compute		rke all erotate/superquadric
compute		kin_e all ke


variable vel atom sqrt(vx*vx+vy*vy+vz*vz)

# 'vel' is defined in the above, 
# then, what is the next ?
# (JK_QUESTION):  명령 순서들이 잘 이해가 안간다...

# v_vel 변수 velocity
# c_vmax 계산된 vmax

compute vmax all reduce max v_vel
variable vmax equal c_vmax

# thermo N, output thermodynamics every N time steps
# compute and print thermodynamic info (temperature, energy, pressure) 

# (JK_QUESTION):  c_rke, c_kin_e 등이 라이츠 매뉴얼에는 없는데, 사용자 정의인가?

thermo_style	custom step atoms c_rke c_kin_e c_vmax cpu time
thermo		${thermofreq}
thermo_modify	lost ignore norm no
compute_modify	thermo_temp dynamic yes

#insert the first particles so that dump is not empty

#fix write_m1 all print ${writeOutEvery} "${time} ${rot_en}" file rotational_energy_.txt screen no
#fix write_m2 all print ${writeOutEvery} "${time} ${kin_en}" file kinetic_energy_.txt screen no


run		1
shell mkdir post
dump		dmp all custom/vtk ${writeOutEvery} post/dump*.superq.vtk type mass x y z id vx vy vz fx fy fz omegax omegay omegaz radius shapex shapey shapez quat1 quat2 quat3 quat4 blockiness1 blockiness2 tqx tqy tqz angmomx angmomy angmomz
dump 		dumpstl all mesh/stl ${writeOutEvery} post/wall-*.stl

velocity all zero linear
fix move all move/mesh mesh moveWall linear 0. 0. 0.1

run   ${mStepRun} # 0.1 s


# 밀어준 모션 없애기 
unfix move
velocity all zero linear

run   ${mStepRun}

velocity all zero linear
fix     grave  all gravity 9.81 vector 0.0 -1.0 0.0

fix zeroMoment all momentum 1 linear 0 0 1 # 0:free, 1: lock

run		${nStepsRun} 
unfix verticalWall
run     ${nStepsRun}
